---
    - name: Add Dockers official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Verify that we have the key with the fingerprint
      apt_key:
        id: 0EBFCD88
        state: present
    - name: Set up the stable repository for x86_64
      when: ansible_architecture is "x86_64"
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - name: Set up the stable repository for armhf
      when: ansible_architecture is "arm64"
      apt_repository:
        repo: "deb [arch=armhf] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - name: Update apt packages
      package:
        update_cache: yes
    - name: Install Docker dependencies
      apt:
        name:
          [
            "apt-transport-https",
            "ca-certificates",
            "curl",
            "software-properties-common",
          ]
        state: present
        update_cache: yes
    - name: Install docker
      ignore_errors: "{{ ansible_check_mode }}"
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      notify: start_docker
    - name: Install docker-compose
      get_url:
        url : https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 0666
        owner: root
        group: root
    - name: Add user user to group `docker`
      ignore_errors: "{{ ansible_check_mode }}"
      user:
        name: "{{ template_username }}"
        groups: 
          - docker
        append: yes
    - name: Forward Docker logs to Loki by default
      copy:
        dest: /etc/docker/daemon.json
        contents: |
            {
              "log-driver": "loki",
              "log-opts": {
                "loki-url": "https://{{ loki_server_address }}/loki/api/v1/push"
              }
            }
    - name: Schedule cleanups to prevent disk usage problems
      cron:
        state: present
        name: Docker system prune
        job: "/usr/bin/docker system prune -f"
        hour: 3
